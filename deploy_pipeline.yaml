name: Build, Test, and Deploy to AWS

on:
  push:
    branches:
      - main  # Executa o workflow em pushes para a branch `main`

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # Etapa 1: Checkout do código
    - name: Checkout code
      uses: actions/checkout@v3

    # Etapa 2: Configurar o AWS CLI
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Altere para sua região AWS

    # Etapa 3: Login no Amazon ECR
    - name: Log in to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v2

    # Etapa 4: Construir a imagem Docker
    - name: Build Docker image
      run: |
        docker build -t my-app:latest .

    # Etapa 5: Tag da imagem Docker
    - name: Tag Docker image
      run: |
        IMAGE_TAG=my-app:latest
        REPO_URI=$(aws ecr describe-repositories --repository-names my-app --query "repositories[0].repositoryUri" --output text)
        docker tag $IMAGE_TAG $REPO_URI:$GITHUB_SHA

    # Etapa 6: Push da imagem para o Amazon ECR
    - name: Push Docker image to Amazon ECR
      run: |
        REPO_URI=$(aws ecr describe-repositories --repository-names my-app --query "repositories[0].repositoryUri" --output text)
        docker push $REPO_URI:$GITHUB_SHA

    # Etapa 7: Executar os testes
    - name: Run Tests
      run: |
        docker run --rm my-app:latest pytest tests/

    # Etapa 8: Deploy para o ECS
    - name: Deploy to Amazon ECS
      run: |
        CLUSTER_NAME=my-ecs-cluster
        SERVICE_NAME=my-ecs-service
        CONTAINER_NAME=my-app
        TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $SERVICE_NAME --query "taskDefinition" --output json)
        NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE_URI "$REPO_URI:$GITHUB_SHA" '.containerDefinitions[0].image=$IMAGE_URI')
        echo $NEW_TASK_DEFINITION > new-task-def.json
        aws ecs register-task-definition --cli-input-json file://new-task-def.json
        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
